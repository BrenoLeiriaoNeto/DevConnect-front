name: Security Audit

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  schedule:
    - cron: '0 3 * * 1'

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level=high

      - name: Targeted npm attack check
        run: |
          echo "üîç Checking for known compromised npm package versions..."
          BAD_VERSIONS="ansi-regex@6.2.1|ansi-styles@6.2.2|chalk@5.6.1|chalk-template@1.1.1|color-convert@3.1.1|color-name@2.0.1|color-string@2.1.1|debug@4.4.2|error-ex@1.3.3|has-ansi@6.0.1|is-arrayish@0.3.3|proto-tinker-wc@1.8.7|supports-hyperlinks@4.1.1|simple-swizzle@0.2.3|slice-ansi@7.1.1|strip-ansi@7.1.1|supports-color@10.2.1|wrap-ansi@9.0.1"
          if grep -E "$BAD_VERSIONS" pnpm-lock.yaml; then
            echo "‚ùå Found compromised package versions!"
            exit 1
          else
            echo "‚úÖ No compromised package versions found."
          fi

  notify:
    needs: [audit]
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        uses: Ilshidur/action-discord@0.4.0
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            {
              "embeds": [{
                "title": "üì¢ Security Audit Report",
                "color": ${{ needs.audit.result == 'success' && 3066993 || 15158332 }},
                "fields": [
                  { "name": "Repository", "value": "${{ github.repository }}", "inline": true },
                  { "name": "Branch", "value": "${{ github.ref_name }}", "inline": true },
                  { "name": "Actor", "value": "${{ github.actor }}", "inline": true },
                  { "name": "Commit", "value": "[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})", "inline": false },
                  { "name": "Workflow Run", "value": "[View Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})", "inline": false },
                  { "name": "Status", "value": "${{ needs.audit.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}", "inline": true },
                  { "name": "Event", "value": "${{ github.event_name }}", "inline": true },
                  { "name": "PR Title", "value": "${{ github.event.pull_request.title || 'N/A' }}", "inline": false }
                ],
                "timestamp": "${{ github.event.head_commit.timestamp || github.event.pull_request.updated_at }}"
              }]
            }
