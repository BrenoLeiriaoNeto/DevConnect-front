name: Security Audit

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  schedule:
    - cron: '0 3 * * 1'

jobs:
  audit:
    runs-on: ubuntu-latest
    outputs:
      summary: ${{ steps.collect.outputs.summary }}
      status: ${{ steps.audit.outputs.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit (filtered)
        id: audit
        run: |
          set +e
          # Rodar audit em JSON
          pnpm audit --json > audit-output.json 2>&1
          EXIT_CODE=$?

          # Filtrar apenas vulnerabilidades high/critical e runtime
          jq -r '.advisories | to_entries[] 
            | select(.value.severity == "high" or .value.severity == "critical") 
            | select(.value.dev === false) 
            | "\(.value.module_name) - \(.value.severity) - \(.value.title)"' audit-output.json \
            | head -n 20 > audit-summary.txt

          # Se houver linhas no resumo, marcar como "falha" para o Discord
          if [ -s audit-summary.txt ]; then
            echo "status=1" >> $GITHUB_OUTPUT
          else
            echo "status=0" >> $GITHUB_OUTPUT
          fi

          # Nunca falhar o job no CI
          exit 0

      - name: Targeted npm attack check
        id: targeted
        run: |
          echo "üîç Checking for known compromised npm package versions..."
          BAD_VERSIONS="ansi-regex@6.2.1|ansi-styles@6.2.2|chalk@5.6.1|chalk-template@1.1.1|color-convert@3.1.1|color-name@2.0.1|color-string@2.1.1|debug@4.4.2|error-ex@1.3.3|has-ansi@6.0.1|is-arrayish@0.3.3|proto-tinker-wc@1.8.7|supports-hyperlinks@4.1.1|simple-swizzle@0.2.3|slice-ansi@7.1.1|strip-ansi@7.1.1|supports-color@10.2.1|wrap-ansi@9.0.1"
          if grep -E "$BAD_VERSIONS" pnpm-lock.yaml; then
            echo "‚ùå Found compromised package versions!" > targeted-summary.txt
            grep -E "$BAD_VERSIONS" pnpm-lock.yaml >> targeted-summary.txt
          else
            echo "‚úÖ No compromised package versions found." > targeted-summary.txt
          fi

      - name: Collect summaries
        id: collect
        run: |
          echo "summary<<EOF" >> $GITHUB_OUTPUT

          echo "**üîç Security Audit Summary**" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT

          if [ -s audit-summary.txt ]; then
            COUNT=$(wc -l < audit-summary.txt | tr -d ' ')
            echo "‚ö†Ô∏è **$COUNT high/critical runtime vulnerabilities found:**" >> $GITHUB_OUTPUT
            while IFS= read -r line; do
              echo "   ‚Ä¢ $line" >> $GITHUB_OUTPUT
            done < audit-summary.txt
            if [ "$COUNT" -gt 20 ]; then
              echo "   _(showing first 20 results)_" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚úÖ No high/critical runtime vulnerabilities found." >> $GITHUB_OUTPUT
          fi
      
          echo "" >> $GITHUB_OUTPUT
          echo "**üéØ Targeted Package Check**" >> $GITHUB_OUTPUT
          while IFS= read -r line; do
            echo "   ‚Ä¢ $line" >> $GITHUB_OUTPUT
          done < targeted-summary.txt
      
          echo "EOF" >> $GITHUB_OUTPUT

  notify:
    needs: [audit]
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        uses: Ilshidur/action-discord@0.4.0
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            {
              "embeds": [{
                "title": "üì¢ Security Audit Report",
                "color": ${{ needs.audit.outputs.status == '0' && 3066993 || 15158332 }},
                "fields": [
                  { "name": "Repository", "value": "${{ github.repository }}", "inline": true },
                  { "name": "Branch", "value": "${{ github.ref_name }}", "inline": true },
                  { "name": "Actor", "value": "${{ github.actor }}", "inline": true },
                  { "name": "Commit", "value": "[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})", "inline": false },
                  { "name": "Workflow Run", "value": "[View Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})", "inline": false },
                  { "name": "Status", "value": "${{ needs.audit.outputs.status == '0' && '‚úÖ Passed' || '‚ùå High/Critical Runtime Vulnerabilities Found' }}", "inline": true },
                  { "name": "Event", "value": "${{ github.event_name }}", "inline": true },
                  { "name": "PR Title", "value": "${{ github.event.pull_request.title || 'N/A' }}", "inline": false }${
                    needs.audit.outputs.status != '0'
                      ? `,
                  { "name": "Vulnerabilities", "value": "```${{ needs.audit.outputs.summary }}```", "inline": false }`
                      : ''
                  }
                ],
                "timestamp": "${{ github.event.head_commit.timestamp || github.event.pull_request.updated_at }}"
              }]
            }
